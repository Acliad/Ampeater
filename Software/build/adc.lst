ARM GAS  /var/folders/b6/_lrwbzzx5qg46wbggw31g5280000gn/T//ccwjEv1s.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"adc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_ADC_Init,"ax",%progbits
  16              		.align	1
  17              		.global	MX_ADC_Init
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	MX_ADC_Init:
  25              	.LFB40:
  26              		.file 1 "Core/Src/adc.c"
   1:Core/Src/adc.c **** /**
   2:Core/Src/adc.c ****   ******************************************************************************
   3:Core/Src/adc.c ****   * @file    adc.c
   4:Core/Src/adc.c ****   * @brief   This file provides code for the configuration
   5:Core/Src/adc.c ****   *          of the ADC instances.
   6:Core/Src/adc.c ****   ******************************************************************************
   7:Core/Src/adc.c ****   * @attention
   8:Core/Src/adc.c ****   *
   9:Core/Src/adc.c ****   * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/adc.c ****   * All rights reserved.</center></h2>
  11:Core/Src/adc.c ****   *
  12:Core/Src/adc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/adc.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/adc.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/adc.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/adc.c ****   *
  17:Core/Src/adc.c ****   ******************************************************************************
  18:Core/Src/adc.c ****   */
  19:Core/Src/adc.c **** 
  20:Core/Src/adc.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/adc.c **** #include "adc.h"
  22:Core/Src/adc.c **** 
  23:Core/Src/adc.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/adc.c **** uint16_t adc_buffer[ADC_NUM_CHANNELS] = {0};
  25:Core/Src/adc.c **** #define ADC_BUF_LEN_BYTES ADC_NUM_CHANNELS*sizeof(adc_buffer[0])
  26:Core/Src/adc.c **** /* USER CODE END 0 */
  27:Core/Src/adc.c **** 
  28:Core/Src/adc.c **** ADC_HandleTypeDef hadc;
  29:Core/Src/adc.c **** DMA_HandleTypeDef hdma_adc;
  30:Core/Src/adc.c **** 
  31:Core/Src/adc.c **** /* ADC init function */
  32:Core/Src/adc.c **** void MX_ADC_Init(void)
ARM GAS  /var/folders/b6/_lrwbzzx5qg46wbggw31g5280000gn/T//ccwjEv1s.s 			page 2


  33:Core/Src/adc.c **** {
  27              		.loc 1 33 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 00B5     		push	{lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 14, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 16
  34:Core/Src/adc.c ****   ADC_ChannelConfTypeDef sConfig = {0};
  38              		.loc 1 34 3 view .LVU1
  39              		.loc 1 34 26 is_stmt 0 view .LVU2
  40 0004 0822     		movs	r2, #8
  41 0006 0021     		movs	r1, #0
  42 0008 6846     		mov	r0, sp
  43 000a FFF7FEFF 		bl	memset
  44              	.LVL0:
  35:Core/Src/adc.c **** 
  36:Core/Src/adc.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
  37:Core/Src/adc.c ****   */
  38:Core/Src/adc.c ****   hadc.Instance = ADC1;
  45              		.loc 1 38 3 is_stmt 1 view .LVU3
  46              		.loc 1 38 17 is_stmt 0 view .LVU4
  47 000e 2648     		ldr	r0, .L10
  48 0010 264B     		ldr	r3, .L10+4
  49 0012 0360     		str	r3, [r0]
  39:Core/Src/adc.c ****   hadc.Init.OversamplingMode = DISABLE;
  50              		.loc 1 39 3 is_stmt 1 view .LVU5
  51              		.loc 1 39 30 is_stmt 0 view .LVU6
  52 0014 0023     		movs	r3, #0
  53 0016 C363     		str	r3, [r0, #60]
  40:Core/Src/adc.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV1;
  54              		.loc 1 40 3 is_stmt 1 view .LVU7
  55              		.loc 1 40 28 is_stmt 0 view .LVU8
  56 0018 C022     		movs	r2, #192
  57 001a 1206     		lsls	r2, r2, #24
  58 001c 4260     		str	r2, [r0, #4]
  41:Core/Src/adc.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
  59              		.loc 1 41 3 is_stmt 1 view .LVU9
  60              		.loc 1 41 24 is_stmt 0 view .LVU10
  61 001e 8360     		str	r3, [r0, #8]
  42:Core/Src/adc.c ****   hadc.Init.SamplingTime = ADC_SAMPLETIME_160CYCLES_5;
  62              		.loc 1 42 3 is_stmt 1 view .LVU11
  63              		.loc 1 42 26 is_stmt 0 view .LVU12
  64 0020 0722     		movs	r2, #7
  65 0022 8263     		str	r2, [r0, #56]
  43:Core/Src/adc.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
  66              		.loc 1 43 3 is_stmt 1 view .LVU13
  67              		.loc 1 43 26 is_stmt 0 view .LVU14
  68 0024 063A     		subs	r2, r2, #6
  69 0026 0261     		str	r2, [r0, #16]
  44:Core/Src/adc.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  70              		.loc 1 44 3 is_stmt 1 view .LVU15
  71              		.loc 1 44 23 is_stmt 0 view .LVU16
ARM GAS  /var/folders/b6/_lrwbzzx5qg46wbggw31g5280000gn/T//ccwjEv1s.s 			page 3


  72 0028 C360     		str	r3, [r0, #12]
  45:Core/Src/adc.c ****   hadc.Init.ContinuousConvMode = DISABLE;
  73              		.loc 1 45 3 is_stmt 1 view .LVU17
  74              		.loc 1 45 32 is_stmt 0 view .LVU18
  75 002a 1F32     		adds	r2, r2, #31
  76 002c 8354     		strb	r3, [r0, r2]
  46:Core/Src/adc.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
  77              		.loc 1 46 3 is_stmt 1 view .LVU19
  78              		.loc 1 46 35 is_stmt 0 view .LVU20
  79 002e 0132     		adds	r2, r2, #1
  80 0030 8354     		strb	r3, [r0, r2]
  47:Core/Src/adc.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  81              		.loc 1 47 3 is_stmt 1 view .LVU21
  82              		.loc 1 47 34 is_stmt 0 view .LVU22
  83 0032 8362     		str	r3, [r0, #40]
  48:Core/Src/adc.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  84              		.loc 1 48 3 is_stmt 1 view .LVU23
  85              		.loc 1 48 30 is_stmt 0 view .LVU24
  86 0034 C222     		movs	r2, #194
  87 0036 FF32     		adds	r2, r2, #255
  88 0038 4262     		str	r2, [r0, #36]
  49:Core/Src/adc.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
  89              		.loc 1 49 3 is_stmt 1 view .LVU25
  90              		.loc 1 49 35 is_stmt 0 view .LVU26
  91 003a 963A     		subs	r2, r2, #150
  92 003c FF3A     		subs	r2, r2, #255
  93 003e 8354     		strb	r3, [r0, r2]
  50:Core/Src/adc.c ****   hadc.Init.EOCSelection = ADC_EOC_SEQ_CONV;
  94              		.loc 1 50 3 is_stmt 1 view .LVU27
  95              		.loc 1 50 26 is_stmt 0 view .LVU28
  96 0040 243A     		subs	r2, r2, #36
  97 0042 4261     		str	r2, [r0, #20]
  51:Core/Src/adc.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
  98              		.loc 1 51 3 is_stmt 1 view .LVU29
  99              		.loc 1 51 21 is_stmt 0 view .LVU30
 100 0044 0363     		str	r3, [r0, #48]
  52:Core/Src/adc.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 101              		.loc 1 52 3 is_stmt 1 view .LVU31
 102              		.loc 1 52 30 is_stmt 0 view .LVU32
 103 0046 8361     		str	r3, [r0, #24]
  53:Core/Src/adc.c ****   hadc.Init.LowPowerFrequencyMode = DISABLE;
 104              		.loc 1 53 3 is_stmt 1 view .LVU33
 105              		.loc 1 53 35 is_stmt 0 view .LVU34
 106 0048 4363     		str	r3, [r0, #52]
  54:Core/Src/adc.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 107              		.loc 1 54 3 is_stmt 1 view .LVU35
 108              		.loc 1 54 34 is_stmt 0 view .LVU36
 109 004a C361     		str	r3, [r0, #28]
  55:Core/Src/adc.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 110              		.loc 1 55 3 is_stmt 1 view .LVU37
 111              		.loc 1 55 7 is_stmt 0 view .LVU38
 112 004c FFF7FEFF 		bl	HAL_ADC_Init
 113              	.LVL1:
 114              		.loc 1 55 6 view .LVU39
 115 0050 0028     		cmp	r0, #0
 116 0052 1CD1     		bne	.L6
 117              	.L2:
ARM GAS  /var/folders/b6/_lrwbzzx5qg46wbggw31g5280000gn/T//ccwjEv1s.s 			page 4


  56:Core/Src/adc.c ****   {
  57:Core/Src/adc.c ****     Error_Handler();
  58:Core/Src/adc.c ****   }
  59:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel to be converted.
  60:Core/Src/adc.c ****   */
  61:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_0;
 118              		.loc 1 61 3 is_stmt 1 view .LVU40
 119              		.loc 1 61 19 is_stmt 0 view .LVU41
 120 0054 0123     		movs	r3, #1
 121 0056 0093     		str	r3, [sp]
  62:Core/Src/adc.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 122              		.loc 1 62 3 is_stmt 1 view .LVU42
 123              		.loc 1 62 16 is_stmt 0 view .LVU43
 124 0058 8023     		movs	r3, #128
 125 005a 5B01     		lsls	r3, r3, #5
 126 005c 0193     		str	r3, [sp, #4]
  63:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 127              		.loc 1 63 3 is_stmt 1 view .LVU44
 128              		.loc 1 63 7 is_stmt 0 view .LVU45
 129 005e 6946     		mov	r1, sp
 130 0060 1148     		ldr	r0, .L10
 131 0062 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 132              	.LVL2:
 133              		.loc 1 63 6 view .LVU46
 134 0066 0028     		cmp	r0, #0
 135 0068 14D1     		bne	.L7
 136              	.L3:
  64:Core/Src/adc.c ****   {
  65:Core/Src/adc.c ****     Error_Handler();
  66:Core/Src/adc.c ****   }
  67:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel to be converted.
  68:Core/Src/adc.c ****   */
  69:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_1;
 137              		.loc 1 69 3 is_stmt 1 view .LVU47
 138              		.loc 1 69 19 is_stmt 0 view .LVU48
 139 006a 114B     		ldr	r3, .L10+8
 140 006c 0093     		str	r3, [sp]
  70:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 141              		.loc 1 70 3 is_stmt 1 view .LVU49
 142              		.loc 1 70 7 is_stmt 0 view .LVU50
 143 006e 6946     		mov	r1, sp
 144 0070 0D48     		ldr	r0, .L10
 145 0072 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 146              	.LVL3:
 147              		.loc 1 70 6 view .LVU51
 148 0076 0028     		cmp	r0, #0
 149 0078 0FD1     		bne	.L8
 150              	.L4:
  71:Core/Src/adc.c ****   {
  72:Core/Src/adc.c ****     Error_Handler();
  73:Core/Src/adc.c ****   }
  74:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel to be converted.
  75:Core/Src/adc.c ****   */
  76:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_9;
 151              		.loc 1 76 3 is_stmt 1 view .LVU52
 152              		.loc 1 76 19 is_stmt 0 view .LVU53
 153 007a 0E4B     		ldr	r3, .L10+12
ARM GAS  /var/folders/b6/_lrwbzzx5qg46wbggw31g5280000gn/T//ccwjEv1s.s 			page 5


 154 007c 0093     		str	r3, [sp]
  77:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 155              		.loc 1 77 3 is_stmt 1 view .LVU54
 156              		.loc 1 77 7 is_stmt 0 view .LVU55
 157 007e 6946     		mov	r1, sp
 158 0080 0948     		ldr	r0, .L10
 159 0082 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 160              	.LVL4:
 161              		.loc 1 77 6 view .LVU56
 162 0086 0028     		cmp	r0, #0
 163 0088 0AD1     		bne	.L9
 164              	.L1:
  78:Core/Src/adc.c ****   {
  79:Core/Src/adc.c ****     Error_Handler();
  80:Core/Src/adc.c ****   }
  81:Core/Src/adc.c **** 
  82:Core/Src/adc.c **** }
 165              		.loc 1 82 1 view .LVU57
 166 008a 03B0     		add	sp, sp, #12
 167              		@ sp needed
 168 008c 00BD     		pop	{pc}
 169              	.L6:
  57:Core/Src/adc.c ****   }
 170              		.loc 1 57 5 is_stmt 1 view .LVU58
 171 008e FFF7FEFF 		bl	Error_Handler
 172              	.LVL5:
 173 0092 DFE7     		b	.L2
 174              	.L7:
  65:Core/Src/adc.c ****   }
 175              		.loc 1 65 5 view .LVU59
 176 0094 FFF7FEFF 		bl	Error_Handler
 177              	.LVL6:
 178 0098 E7E7     		b	.L3
 179              	.L8:
  72:Core/Src/adc.c ****   }
 180              		.loc 1 72 5 view .LVU60
 181 009a FFF7FEFF 		bl	Error_Handler
 182              	.LVL7:
 183 009e ECE7     		b	.L4
 184              	.L9:
  79:Core/Src/adc.c ****   }
 185              		.loc 1 79 5 view .LVU61
 186 00a0 FFF7FEFF 		bl	Error_Handler
 187              	.LVL8:
 188              		.loc 1 82 1 is_stmt 0 view .LVU62
 189 00a4 F1E7     		b	.L1
 190              	.L11:
 191 00a6 C046     		.align	2
 192              	.L10:
 193 00a8 00000000 		.word	hadc
 194 00ac 00240140 		.word	1073816576
 195 00b0 02000004 		.word	67108866
 196 00b4 00020024 		.word	603980288
 197              		.cfi_endproc
 198              	.LFE40:
 200              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 201              		.align	1
ARM GAS  /var/folders/b6/_lrwbzzx5qg46wbggw31g5280000gn/T//ccwjEv1s.s 			page 6


 202              		.global	HAL_ADC_MspInit
 203              		.syntax unified
 204              		.code	16
 205              		.thumb_func
 206              		.fpu softvfp
 208              	HAL_ADC_MspInit:
 209              	.LVL9:
 210              	.LFB41:
  83:Core/Src/adc.c **** 
  84:Core/Src/adc.c **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
  85:Core/Src/adc.c **** {
 211              		.loc 1 85 1 is_stmt 1 view -0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 32
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215              		.loc 1 85 1 is_stmt 0 view .LVU64
 216 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 217              	.LCFI2:
 218              		.cfi_def_cfa_offset 20
 219              		.cfi_offset 4, -20
 220              		.cfi_offset 5, -16
 221              		.cfi_offset 6, -12
 222              		.cfi_offset 7, -8
 223              		.cfi_offset 14, -4
 224 0002 89B0     		sub	sp, sp, #36
 225              	.LCFI3:
 226              		.cfi_def_cfa_offset 56
 227 0004 0400     		movs	r4, r0
  86:Core/Src/adc.c **** 
  87:Core/Src/adc.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 228              		.loc 1 87 3 is_stmt 1 view .LVU65
 229              		.loc 1 87 20 is_stmt 0 view .LVU66
 230 0006 1422     		movs	r2, #20
 231 0008 0021     		movs	r1, #0
 232 000a 03A8     		add	r0, sp, #12
 233              	.LVL10:
 234              		.loc 1 87 20 view .LVU67
 235 000c FFF7FEFF 		bl	memset
 236              	.LVL11:
  88:Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 237              		.loc 1 88 3 is_stmt 1 view .LVU68
 238              		.loc 1 88 5 is_stmt 0 view .LVU69
 239 0010 234B     		ldr	r3, .L17
 240 0012 2268     		ldr	r2, [r4]
 241 0014 9A42     		cmp	r2, r3
 242 0016 01D0     		beq	.L15
 243              	.L12:
  89:Core/Src/adc.c ****   {
  90:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 0 */
  91:Core/Src/adc.c **** 
  92:Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 0 */
  93:Core/Src/adc.c ****     /* ADC1 clock enable */
  94:Core/Src/adc.c ****     __HAL_RCC_ADC1_CLK_ENABLE();
  95:Core/Src/adc.c **** 
  96:Core/Src/adc.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  97:Core/Src/adc.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
  98:Core/Src/adc.c ****     /**ADC GPIO Configuration
ARM GAS  /var/folders/b6/_lrwbzzx5qg46wbggw31g5280000gn/T//ccwjEv1s.s 			page 7


  99:Core/Src/adc.c ****     PA0-CK_IN     ------> ADC_IN0
 100:Core/Src/adc.c ****     PA1     ------> ADC_IN1
 101:Core/Src/adc.c ****     PB1     ------> ADC_IN9
 102:Core/Src/adc.c ****     */
 103:Core/Src/adc.c ****     GPIO_InitStruct.Pin = Vsense_R_Pin|Vsense_FET_Pin;
 104:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 105:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 106:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 107:Core/Src/adc.c **** 
 108:Core/Src/adc.c ****     GPIO_InitStruct.Pin = Vbtns_Pin;
 109:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 110:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 111:Core/Src/adc.c ****     HAL_GPIO_Init(Vbtns_GPIO_Port, &GPIO_InitStruct);
 112:Core/Src/adc.c **** 
 113:Core/Src/adc.c ****     /* ADC1 DMA Init */
 114:Core/Src/adc.c ****     /* ADC Init */
 115:Core/Src/adc.c ****     hdma_adc.Instance = DMA1_Channel1;
 116:Core/Src/adc.c ****     hdma_adc.Init.Request = DMA_REQUEST_0;
 117:Core/Src/adc.c ****     hdma_adc.Init.Direction = DMA_PERIPH_TO_MEMORY;
 118:Core/Src/adc.c ****     hdma_adc.Init.PeriphInc = DMA_PINC_DISABLE;
 119:Core/Src/adc.c ****     hdma_adc.Init.MemInc = DMA_MINC_ENABLE;
 120:Core/Src/adc.c ****     hdma_adc.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 121:Core/Src/adc.c ****     hdma_adc.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 122:Core/Src/adc.c ****     hdma_adc.Init.Mode = DMA_NORMAL;
 123:Core/Src/adc.c ****     hdma_adc.Init.Priority = DMA_PRIORITY_LOW;
 124:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc) != HAL_OK)
 125:Core/Src/adc.c ****     {
 126:Core/Src/adc.c ****       Error_Handler();
 127:Core/Src/adc.c ****     }
 128:Core/Src/adc.c **** 
 129:Core/Src/adc.c ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc);
 130:Core/Src/adc.c **** 
 131:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 132:Core/Src/adc.c **** 
 133:Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 1 */
 134:Core/Src/adc.c ****   }
 135:Core/Src/adc.c **** }
 244              		.loc 1 135 1 view .LVU70
 245 0018 09B0     		add	sp, sp, #36
 246              		@ sp needed
 247              	.LVL12:
 248              		.loc 1 135 1 view .LVU71
 249 001a F0BD     		pop	{r4, r5, r6, r7, pc}
 250              	.LVL13:
 251              	.L15:
  94:Core/Src/adc.c **** 
 252              		.loc 1 94 5 is_stmt 1 view .LVU72
 253 001c 214B     		ldr	r3, .L17+4
 254 001e 596B     		ldr	r1, [r3, #52]
 255 0020 8022     		movs	r2, #128
 256 0022 9200     		lsls	r2, r2, #2
 257 0024 0A43     		orrs	r2, r1
 258 0026 5A63     		str	r2, [r3, #52]
  96:Core/Src/adc.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 259              		.loc 1 96 5 view .LVU73
 260              	.LBB2:
  96:Core/Src/adc.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
ARM GAS  /var/folders/b6/_lrwbzzx5qg46wbggw31g5280000gn/T//ccwjEv1s.s 			page 8


 261              		.loc 1 96 5 view .LVU74
  96:Core/Src/adc.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 262              		.loc 1 96 5 view .LVU75
 263 0028 D96A     		ldr	r1, [r3, #44]
 264 002a 0122     		movs	r2, #1
 265 002c 1143     		orrs	r1, r2
 266 002e D962     		str	r1, [r3, #44]
  96:Core/Src/adc.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 267              		.loc 1 96 5 view .LVU76
 268 0030 D96A     		ldr	r1, [r3, #44]
 269 0032 0A40     		ands	r2, r1
 270 0034 0192     		str	r2, [sp, #4]
  96:Core/Src/adc.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 271              		.loc 1 96 5 view .LVU77
 272 0036 019A     		ldr	r2, [sp, #4]
 273              	.LBE2:
  96:Core/Src/adc.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 274              		.loc 1 96 5 view .LVU78
  97:Core/Src/adc.c ****     /**ADC GPIO Configuration
 275              		.loc 1 97 5 view .LVU79
 276              	.LBB3:
  97:Core/Src/adc.c ****     /**ADC GPIO Configuration
 277              		.loc 1 97 5 view .LVU80
  97:Core/Src/adc.c ****     /**ADC GPIO Configuration
 278              		.loc 1 97 5 view .LVU81
 279 0038 DA6A     		ldr	r2, [r3, #44]
 280 003a 0227     		movs	r7, #2
 281 003c 3A43     		orrs	r2, r7
 282 003e DA62     		str	r2, [r3, #44]
  97:Core/Src/adc.c ****     /**ADC GPIO Configuration
 283              		.loc 1 97 5 view .LVU82
 284 0040 DB6A     		ldr	r3, [r3, #44]
 285 0042 3B40     		ands	r3, r7
 286 0044 0293     		str	r3, [sp, #8]
  97:Core/Src/adc.c ****     /**ADC GPIO Configuration
 287              		.loc 1 97 5 view .LVU83
 288 0046 029B     		ldr	r3, [sp, #8]
 289              	.LBE3:
  97:Core/Src/adc.c ****     /**ADC GPIO Configuration
 290              		.loc 1 97 5 view .LVU84
 103:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 291              		.loc 1 103 5 view .LVU85
 103:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 292              		.loc 1 103 25 is_stmt 0 view .LVU86
 293 0048 0326     		movs	r6, #3
 294 004a 0396     		str	r6, [sp, #12]
 104:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 295              		.loc 1 104 5 is_stmt 1 view .LVU87
 104:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 296              		.loc 1 104 26 is_stmt 0 view .LVU88
 297 004c 0496     		str	r6, [sp, #16]
 105:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 298              		.loc 1 105 5 is_stmt 1 view .LVU89
 105:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 299              		.loc 1 105 26 is_stmt 0 view .LVU90
 300 004e 0025     		movs	r5, #0
 301 0050 0595     		str	r5, [sp, #20]
ARM GAS  /var/folders/b6/_lrwbzzx5qg46wbggw31g5280000gn/T//ccwjEv1s.s 			page 9


 106:Core/Src/adc.c **** 
 302              		.loc 1 106 5 is_stmt 1 view .LVU91
 303 0052 A020     		movs	r0, #160
 304 0054 03A9     		add	r1, sp, #12
 305 0056 C005     		lsls	r0, r0, #23
 306 0058 FFF7FEFF 		bl	HAL_GPIO_Init
 307              	.LVL14:
 108:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 308              		.loc 1 108 5 view .LVU92
 108:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 309              		.loc 1 108 25 is_stmt 0 view .LVU93
 310 005c 0397     		str	r7, [sp, #12]
 109:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 311              		.loc 1 109 5 is_stmt 1 view .LVU94
 109:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 312              		.loc 1 109 26 is_stmt 0 view .LVU95
 313 005e 0496     		str	r6, [sp, #16]
 110:Core/Src/adc.c ****     HAL_GPIO_Init(Vbtns_GPIO_Port, &GPIO_InitStruct);
 314              		.loc 1 110 5 is_stmt 1 view .LVU96
 110:Core/Src/adc.c ****     HAL_GPIO_Init(Vbtns_GPIO_Port, &GPIO_InitStruct);
 315              		.loc 1 110 26 is_stmt 0 view .LVU97
 316 0060 0595     		str	r5, [sp, #20]
 111:Core/Src/adc.c **** 
 317              		.loc 1 111 5 is_stmt 1 view .LVU98
 318 0062 03A9     		add	r1, sp, #12
 319 0064 1048     		ldr	r0, .L17+8
 320 0066 FFF7FEFF 		bl	HAL_GPIO_Init
 321              	.LVL15:
 115:Core/Src/adc.c ****     hdma_adc.Init.Request = DMA_REQUEST_0;
 322              		.loc 1 115 5 view .LVU99
 115:Core/Src/adc.c ****     hdma_adc.Init.Request = DMA_REQUEST_0;
 323              		.loc 1 115 23 is_stmt 0 view .LVU100
 324 006a 1048     		ldr	r0, .L17+12
 325 006c 104B     		ldr	r3, .L17+16
 326 006e 0360     		str	r3, [r0]
 116:Core/Src/adc.c ****     hdma_adc.Init.Direction = DMA_PERIPH_TO_MEMORY;
 327              		.loc 1 116 5 is_stmt 1 view .LVU101
 116:Core/Src/adc.c ****     hdma_adc.Init.Direction = DMA_PERIPH_TO_MEMORY;
 328              		.loc 1 116 27 is_stmt 0 view .LVU102
 329 0070 4560     		str	r5, [r0, #4]
 117:Core/Src/adc.c ****     hdma_adc.Init.PeriphInc = DMA_PINC_DISABLE;
 330              		.loc 1 117 5 is_stmt 1 view .LVU103
 117:Core/Src/adc.c ****     hdma_adc.Init.PeriphInc = DMA_PINC_DISABLE;
 331              		.loc 1 117 29 is_stmt 0 view .LVU104
 332 0072 8560     		str	r5, [r0, #8]
 118:Core/Src/adc.c ****     hdma_adc.Init.MemInc = DMA_MINC_ENABLE;
 333              		.loc 1 118 5 is_stmt 1 view .LVU105
 118:Core/Src/adc.c ****     hdma_adc.Init.MemInc = DMA_MINC_ENABLE;
 334              		.loc 1 118 29 is_stmt 0 view .LVU106
 335 0074 C560     		str	r5, [r0, #12]
 119:Core/Src/adc.c ****     hdma_adc.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 336              		.loc 1 119 5 is_stmt 1 view .LVU107
 119:Core/Src/adc.c ****     hdma_adc.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 337              		.loc 1 119 26 is_stmt 0 view .LVU108
 338 0076 8023     		movs	r3, #128
 339 0078 0361     		str	r3, [r0, #16]
 120:Core/Src/adc.c ****     hdma_adc.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
ARM GAS  /var/folders/b6/_lrwbzzx5qg46wbggw31g5280000gn/T//ccwjEv1s.s 			page 10


 340              		.loc 1 120 5 is_stmt 1 view .LVU109
 120:Core/Src/adc.c ****     hdma_adc.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 341              		.loc 1 120 39 is_stmt 0 view .LVU110
 342 007a 8033     		adds	r3, r3, #128
 343 007c 4361     		str	r3, [r0, #20]
 121:Core/Src/adc.c ****     hdma_adc.Init.Mode = DMA_NORMAL;
 344              		.loc 1 121 5 is_stmt 1 view .LVU111
 121:Core/Src/adc.c ****     hdma_adc.Init.Mode = DMA_NORMAL;
 345              		.loc 1 121 36 is_stmt 0 view .LVU112
 346 007e 8023     		movs	r3, #128
 347 0080 DB00     		lsls	r3, r3, #3
 348 0082 8361     		str	r3, [r0, #24]
 122:Core/Src/adc.c ****     hdma_adc.Init.Priority = DMA_PRIORITY_LOW;
 349              		.loc 1 122 5 is_stmt 1 view .LVU113
 122:Core/Src/adc.c ****     hdma_adc.Init.Priority = DMA_PRIORITY_LOW;
 350              		.loc 1 122 24 is_stmt 0 view .LVU114
 351 0084 C561     		str	r5, [r0, #28]
 123:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc) != HAL_OK)
 352              		.loc 1 123 5 is_stmt 1 view .LVU115
 123:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc) != HAL_OK)
 353              		.loc 1 123 28 is_stmt 0 view .LVU116
 354 0086 0562     		str	r5, [r0, #32]
 124:Core/Src/adc.c ****     {
 355              		.loc 1 124 5 is_stmt 1 view .LVU117
 124:Core/Src/adc.c ****     {
 356              		.loc 1 124 9 is_stmt 0 view .LVU118
 357 0088 FFF7FEFF 		bl	HAL_DMA_Init
 358              	.LVL16:
 124:Core/Src/adc.c ****     {
 359              		.loc 1 124 8 view .LVU119
 360 008c 0028     		cmp	r0, #0
 361 008e 03D1     		bne	.L16
 362              	.L14:
 129:Core/Src/adc.c **** 
 363              		.loc 1 129 5 is_stmt 1 view .LVU120
 129:Core/Src/adc.c **** 
 364              		.loc 1 129 5 view .LVU121
 365 0090 064B     		ldr	r3, .L17+12
 366 0092 E364     		str	r3, [r4, #76]
 129:Core/Src/adc.c **** 
 367              		.loc 1 129 5 view .LVU122
 368 0094 9C62     		str	r4, [r3, #40]
 129:Core/Src/adc.c **** 
 369              		.loc 1 129 5 view .LVU123
 370              		.loc 1 135 1 is_stmt 0 view .LVU124
 371 0096 BFE7     		b	.L12
 372              	.L16:
 126:Core/Src/adc.c ****     }
 373              		.loc 1 126 7 is_stmt 1 view .LVU125
 374 0098 FFF7FEFF 		bl	Error_Handler
 375              	.LVL17:
 376 009c F8E7     		b	.L14
 377              	.L18:
 378 009e C046     		.align	2
 379              	.L17:
 380 00a0 00240140 		.word	1073816576
 381 00a4 00100240 		.word	1073876992
ARM GAS  /var/folders/b6/_lrwbzzx5qg46wbggw31g5280000gn/T//ccwjEv1s.s 			page 11


 382 00a8 00040050 		.word	1342178304
 383 00ac 00000000 		.word	hdma_adc
 384 00b0 08000240 		.word	1073872904
 385              		.cfi_endproc
 386              	.LFE41:
 388              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 389              		.align	1
 390              		.global	HAL_ADC_MspDeInit
 391              		.syntax unified
 392              		.code	16
 393              		.thumb_func
 394              		.fpu softvfp
 396              	HAL_ADC_MspDeInit:
 397              	.LVL18:
 398              	.LFB42:
 136:Core/Src/adc.c **** 
 137:Core/Src/adc.c **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 138:Core/Src/adc.c **** {
 399              		.loc 1 138 1 view -0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              		.loc 1 138 1 is_stmt 0 view .LVU127
 404 0000 10B5     		push	{r4, lr}
 405              	.LCFI4:
 406              		.cfi_def_cfa_offset 8
 407              		.cfi_offset 4, -8
 408              		.cfi_offset 14, -4
 409 0002 0400     		movs	r4, r0
 139:Core/Src/adc.c **** 
 140:Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 410              		.loc 1 140 3 is_stmt 1 view .LVU128
 411              		.loc 1 140 5 is_stmt 0 view .LVU129
 412 0004 0B4B     		ldr	r3, .L22
 413 0006 0268     		ldr	r2, [r0]
 414 0008 9A42     		cmp	r2, r3
 415 000a 00D0     		beq	.L21
 416              	.LVL19:
 417              	.L19:
 141:Core/Src/adc.c ****   {
 142:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 143:Core/Src/adc.c **** 
 144:Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 0 */
 145:Core/Src/adc.c ****     /* Peripheral clock disable */
 146:Core/Src/adc.c ****     __HAL_RCC_ADC1_CLK_DISABLE();
 147:Core/Src/adc.c **** 
 148:Core/Src/adc.c ****     /**ADC GPIO Configuration
 149:Core/Src/adc.c ****     PA0-CK_IN     ------> ADC_IN0
 150:Core/Src/adc.c ****     PA1     ------> ADC_IN1
 151:Core/Src/adc.c ****     PB1     ------> ADC_IN9
 152:Core/Src/adc.c ****     */
 153:Core/Src/adc.c ****     HAL_GPIO_DeInit(GPIOA, Vsense_R_Pin|Vsense_FET_Pin);
 154:Core/Src/adc.c **** 
 155:Core/Src/adc.c ****     HAL_GPIO_DeInit(Vbtns_GPIO_Port, Vbtns_Pin);
 156:Core/Src/adc.c **** 
 157:Core/Src/adc.c ****     /* ADC1 DMA DeInit */
 158:Core/Src/adc.c ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
ARM GAS  /var/folders/b6/_lrwbzzx5qg46wbggw31g5280000gn/T//ccwjEv1s.s 			page 12


 159:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 160:Core/Src/adc.c **** 
 161:Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 1 */
 162:Core/Src/adc.c ****   }
 163:Core/Src/adc.c **** }
 418              		.loc 1 163 1 view .LVU130
 419              		@ sp needed
 420              	.LVL20:
 421              		.loc 1 163 1 view .LVU131
 422 000c 10BD     		pop	{r4, pc}
 423              	.LVL21:
 424              	.L21:
 146:Core/Src/adc.c **** 
 425              		.loc 1 146 5 is_stmt 1 view .LVU132
 426 000e 0A4A     		ldr	r2, .L22+4
 427 0010 536B     		ldr	r3, [r2, #52]
 428 0012 0A49     		ldr	r1, .L22+8
 429 0014 0B40     		ands	r3, r1
 430 0016 5363     		str	r3, [r2, #52]
 153:Core/Src/adc.c **** 
 431              		.loc 1 153 5 view .LVU133
 432 0018 A020     		movs	r0, #160
 433              	.LVL22:
 153:Core/Src/adc.c **** 
 434              		.loc 1 153 5 is_stmt 0 view .LVU134
 435 001a 0321     		movs	r1, #3
 436 001c C005     		lsls	r0, r0, #23
 437 001e FFF7FEFF 		bl	HAL_GPIO_DeInit
 438              	.LVL23:
 155:Core/Src/adc.c **** 
 439              		.loc 1 155 5 is_stmt 1 view .LVU135
 440 0022 0221     		movs	r1, #2
 441 0024 0648     		ldr	r0, .L22+12
 442 0026 FFF7FEFF 		bl	HAL_GPIO_DeInit
 443              	.LVL24:
 158:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 444              		.loc 1 158 5 view .LVU136
 445 002a E06C     		ldr	r0, [r4, #76]
 446 002c FFF7FEFF 		bl	HAL_DMA_DeInit
 447              	.LVL25:
 448              		.loc 1 163 1 is_stmt 0 view .LVU137
 449 0030 ECE7     		b	.L19
 450              	.L23:
 451 0032 C046     		.align	2
 452              	.L22:
 453 0034 00240140 		.word	1073816576
 454 0038 00100240 		.word	1073876992
 455 003c FFFDFFFF 		.word	-513
 456 0040 00040050 		.word	1342178304
 457              		.cfi_endproc
 458              	.LFE42:
 460              		.section	.text.HAL_ADC_getInstance,"ax",%progbits
 461              		.align	1
 462              		.global	HAL_ADC_getInstance
 463              		.syntax unified
 464              		.code	16
 465              		.thumb_func
ARM GAS  /var/folders/b6/_lrwbzzx5qg46wbggw31g5280000gn/T//ccwjEv1s.s 			page 13


 466              		.fpu softvfp
 468              	HAL_ADC_getInstance:
 469              	.LFB43:
 164:Core/Src/adc.c **** 
 165:Core/Src/adc.c **** /* USER CODE BEGIN 1 */
 166:Core/Src/adc.c **** ADC_HandleTypeDef *HAL_ADC_getInstance(void) { 
 470              		.loc 1 166 46 is_stmt 1 view -0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 0
 473              		@ frame_needed = 0, uses_anonymous_args = 0
 474              		@ link register save eliminated.
 167:Core/Src/adc.c ****     return &hadc; 
 475              		.loc 1 167 5 view .LVU139
 168:Core/Src/adc.c ****   }
 476              		.loc 1 168 3 is_stmt 0 view .LVU140
 477 0000 0048     		ldr	r0, .L25
 478              		@ sp needed
 479 0002 7047     		bx	lr
 480              	.L26:
 481              		.align	2
 482              	.L25:
 483 0004 00000000 		.word	hadc
 484              		.cfi_endproc
 485              	.LFE43:
 487              		.section	.text.ADC_readChannel,"ax",%progbits
 488              		.align	1
 489              		.global	ADC_readChannel
 490              		.syntax unified
 491              		.code	16
 492              		.thumb_func
 493              		.fpu softvfp
 495              	ADC_readChannel:
 496              	.LVL26:
 497              	.LFB44:
 169:Core/Src/adc.c **** 
 170:Core/Src/adc.c **** 
 171:Core/Src/adc.c **** uint16_t ADC_readChannel(uint32_t channel_idx) {
 498              		.loc 1 171 48 is_stmt 1 view -0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502              		.loc 1 171 48 is_stmt 0 view .LVU142
 503 0000 70B5     		push	{r4, r5, r6, lr}
 504              	.LCFI5:
 505              		.cfi_def_cfa_offset 16
 506              		.cfi_offset 4, -16
 507              		.cfi_offset 5, -12
 508              		.cfi_offset 6, -8
 509              		.cfi_offset 14, -4
 510 0002 0400     		movs	r4, r0
 172:Core/Src/adc.c ****   if (channel_idx >= ADC_NUM_CHANNELS) {
 511              		.loc 1 172 3 is_stmt 1 view .LVU143
 512              		.loc 1 172 6 is_stmt 0 view .LVU144
 513 0004 0228     		cmp	r0, #2
 514 0006 11D8     		bhi	.L29
 515              	.LVL27:
 516              	.L28:
ARM GAS  /var/folders/b6/_lrwbzzx5qg46wbggw31g5280000gn/T//ccwjEv1s.s 			page 14


 173:Core/Src/adc.c ****     Error_Handler();
 174:Core/Src/adc.c ****   }
 175:Core/Src/adc.c ****   HAL_ADC_Start_DMA(&hadc, (uint32_t*)adc_buffer, ADC_BUF_LEN_BYTES);
 517              		.loc 1 175 3 is_stmt 1 view .LVU145
 518 0008 0A4E     		ldr	r6, .L30
 519 000a 0B4D     		ldr	r5, .L30+4
 520 000c 0622     		movs	r2, #6
 521 000e 3100     		movs	r1, r6
 522 0010 2800     		movs	r0, r5
 523 0012 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 524              	.LVL28:
 176:Core/Src/adc.c ****   HAL_ADC_PollForConversion(&hadc, HAL_MAX_DELAY);
 525              		.loc 1 176 3 view .LVU146
 526 0016 0121     		movs	r1, #1
 527 0018 4942     		rsbs	r1, r1, #0
 528 001a 2800     		movs	r0, r5
 529 001c FFF7FEFF 		bl	HAL_ADC_PollForConversion
 530              	.LVL29:
 177:Core/Src/adc.c ****   HAL_ADC_Stop_DMA(&hadc);
 531              		.loc 1 177 3 view .LVU147
 532 0020 2800     		movs	r0, r5
 533 0022 FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 534              	.LVL30:
 178:Core/Src/adc.c **** 
 179:Core/Src/adc.c ****   return adc_buffer[channel_idx];
 535              		.loc 1 179 3 view .LVU148
 536              		.loc 1 179 20 is_stmt 0 view .LVU149
 537 0026 6400     		lsls	r4, r4, #1
 538              	.LVL31:
 539              		.loc 1 179 20 view .LVU150
 540 0028 305B     		ldrh	r0, [r6, r4]
 180:Core/Src/adc.c **** }
 541              		.loc 1 180 1 view .LVU151
 542              		@ sp needed
 543 002a 70BD     		pop	{r4, r5, r6, pc}
 544              	.LVL32:
 545              	.L29:
 173:Core/Src/adc.c ****   }
 546              		.loc 1 173 5 is_stmt 1 view .LVU152
 547 002c FFF7FEFF 		bl	Error_Handler
 548              	.LVL33:
 173:Core/Src/adc.c ****   }
 549              		.loc 1 173 5 is_stmt 0 view .LVU153
 550 0030 EAE7     		b	.L28
 551              	.L31:
 552 0032 C046     		.align	2
 553              	.L30:
 554 0034 00000000 		.word	.LANCHOR0
 555 0038 00000000 		.word	hadc
 556              		.cfi_endproc
 557              	.LFE44:
 559              		.comm	hdma_adc,72,4
 560              		.comm	hadc,92,4
 561              		.global	adc_buffer
 562              		.section	.bss.adc_buffer,"aw",%nobits
 563              		.align	2
 564              		.set	.LANCHOR0,. + 0
ARM GAS  /var/folders/b6/_lrwbzzx5qg46wbggw31g5280000gn/T//ccwjEv1s.s 			page 15


 567              	adc_buffer:
 568 0000 00000000 		.space	6
 568      0000
 569              		.text
 570              	.Letext0:
 571              		.file 2 "/Applications/ARM/arm-none-eabi/include/machine/_default_types.h"
 572              		.file 3 "/Applications/ARM/arm-none-eabi/include/sys/_stdint.h"
 573              		.file 4 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/system_stm32l0xx.h"
 574              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l041xx.h"
 575              		.file 6 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l0xx.h"
 576              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 577              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_gpio.h"
 578              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 579              		.file 10 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_adc.h"
 580              		.file 11 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
 581              		.file 12 "Core/Inc/adc.h"
 582              		.file 13 "Core/Inc/main.h"
 583              		.file 14 "<built-in>"
ARM GAS  /var/folders/b6/_lrwbzzx5qg46wbggw31g5280000gn/T//ccwjEv1s.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 adc.c
/var/folders/b6/_lrwbzzx5qg46wbggw31g5280000gn/T//ccwjEv1s.s:16     .text.MX_ADC_Init:0000000000000000 $t
/var/folders/b6/_lrwbzzx5qg46wbggw31g5280000gn/T//ccwjEv1s.s:24     .text.MX_ADC_Init:0000000000000000 MX_ADC_Init
/var/folders/b6/_lrwbzzx5qg46wbggw31g5280000gn/T//ccwjEv1s.s:193    .text.MX_ADC_Init:00000000000000a8 $d
                            *COM*:000000000000005c hadc
/var/folders/b6/_lrwbzzx5qg46wbggw31g5280000gn/T//ccwjEv1s.s:201    .text.HAL_ADC_MspInit:0000000000000000 $t
/var/folders/b6/_lrwbzzx5qg46wbggw31g5280000gn/T//ccwjEv1s.s:208    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
/var/folders/b6/_lrwbzzx5qg46wbggw31g5280000gn/T//ccwjEv1s.s:380    .text.HAL_ADC_MspInit:00000000000000a0 $d
                            *COM*:0000000000000048 hdma_adc
/var/folders/b6/_lrwbzzx5qg46wbggw31g5280000gn/T//ccwjEv1s.s:389    .text.HAL_ADC_MspDeInit:0000000000000000 $t
/var/folders/b6/_lrwbzzx5qg46wbggw31g5280000gn/T//ccwjEv1s.s:396    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
/var/folders/b6/_lrwbzzx5qg46wbggw31g5280000gn/T//ccwjEv1s.s:453    .text.HAL_ADC_MspDeInit:0000000000000034 $d
/var/folders/b6/_lrwbzzx5qg46wbggw31g5280000gn/T//ccwjEv1s.s:461    .text.HAL_ADC_getInstance:0000000000000000 $t
/var/folders/b6/_lrwbzzx5qg46wbggw31g5280000gn/T//ccwjEv1s.s:468    .text.HAL_ADC_getInstance:0000000000000000 HAL_ADC_getInstance
/var/folders/b6/_lrwbzzx5qg46wbggw31g5280000gn/T//ccwjEv1s.s:483    .text.HAL_ADC_getInstance:0000000000000004 $d
/var/folders/b6/_lrwbzzx5qg46wbggw31g5280000gn/T//ccwjEv1s.s:488    .text.ADC_readChannel:0000000000000000 $t
/var/folders/b6/_lrwbzzx5qg46wbggw31g5280000gn/T//ccwjEv1s.s:495    .text.ADC_readChannel:0000000000000000 ADC_readChannel
/var/folders/b6/_lrwbzzx5qg46wbggw31g5280000gn/T//ccwjEv1s.s:554    .text.ADC_readChannel:0000000000000034 $d
/var/folders/b6/_lrwbzzx5qg46wbggw31g5280000gn/T//ccwjEv1s.s:567    .bss.adc_buffer:0000000000000000 adc_buffer
/var/folders/b6/_lrwbzzx5qg46wbggw31g5280000gn/T//ccwjEv1s.s:563    .bss.adc_buffer:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_ADC_Init
HAL_ADC_ConfigChannel
Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_ADC_Start_DMA
HAL_ADC_PollForConversion
HAL_ADC_Stop_DMA
